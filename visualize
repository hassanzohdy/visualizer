#!/usr/bin/env php
<?php

set_time_limit(0);

use System\File;
use System\Console;
use System\CLI\Config;
use System\Application;

// declare the application variable
$app = null;

$optionsList = $argv;

define('ROOT', __DIR__);

// remove first one as its the file name
array_shift($optionsList);

$command = array_shift($optionsList);

$commandsList = [
    'serve' => System\CLI\Commands\Serve::class,
    'install' => System\CLI\Commands\Install::class,
    'new:page' => System\CLI\Commands\NewPage::class,
    'new:app' => System\CLI\Commands\NewApplication::class,
    'build' => System\CLI\Commands\BuildApplication::class,
    'produce' => System\CLI\Commands\ProduceApplication::class,
    'global' => System\CLI\Commands\GlobalConfigurations::class,
];

if ($command == 'install') {
    require 'vendor/System/helpers.php';
    require 'vendor/System/Console.php';
    require 'vendor/System/CLI/Config.php';
    require 'vendor/System/CLI/Command.php';
    require 'vendor/System/CLI/Commands/Install.php';
} else {
    require __DIR__ . '/vendor/autoload.php';

    $file = new File(__DIR__);
    $app = Application::getInstance($file);
}

if (!isset($commandsList[$command])) {
    Console::error(sprintf('Call to undefined command %s', $command));
}

try {
    $commandObject = new $commandsList[$command]($optionsList, $app);

    if ($command != 'install') {
        Config::init();
    }

    $commandObject->execute();

    $commandObject->done();
} catch (Exception $e) {
    echo ("\r\n" . $e->getMessage() . ' in ' . $e->getFile() . ' ' . $e->getLine());

    echo "\r\nError Trace\r\n\r\n";
    foreach ($e->getTrace() as $trace) {
        if (isset($trace['class'])) {
            echo $trace['class'] . ':' . $trace['function'];
        } elseif (isset($trace['function'])) {
            echo $trace['function'];
        }

        echo ' ' . $trace['file'] . ' ' . $trace['line'] . "\r\n";
    }
}